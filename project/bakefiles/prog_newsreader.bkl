<?xml version="1.0"?>
<makefile>
	<!-- Bakefile add-in to automatically create missing directories -->
 	<include file="rules/modules/datafiles.bkl"/>
	<!--Create the bin/ sub directory if it is missing -->
	<mkdir id="bin">
		<dir>bin</dir>
	</mkdir>

	<lib id="gresources">
		<!--Succesful build depends on existence of bin/ sub directory -->
		<depends>bin</depends>

		<!--Final program compiler output goes here -->
		<dirname>bin</dirname>

		<depends-on-file>../source/rss_ui/app_style.css</depends-on-file>
		<depends-on-file>../source/rss_ui/app_icon.png</depends-on-file>
		<depends-on-file>../source/rss_ui/app_resources.xml</depends-on-file>

		<!--Dependent headers -->
		<headers>../source/rss_lib/app_resources.h</headers>

		<!--Source code used to create the object file -->
		<!-- Resource Bundles -->
		<sources>../source/rss_ui/app_resources.c</sources>

		<!--Common compiler/linker flags -->
		<!--Include file directories -->
		<include>../source</include>

		<cflags>-c</cflags>
		<cflags>-std=c17</cflags>
		<cflags>-pipe</cflags>
		<cflags>-O2</cflags>
		<cflags>-ggdb</cflags>

		<cflags>-fasynchronous-unwind-tables</cflags>
		<cflags>-fcf-protection=full</cflags>
		<cflags>-fno-common</cflags>
		<cflags>-fnon-call-exceptions</cflags>
		<cflags>-fsplit-stack</cflags>
		<cflags>-fstack-clash-protection</cflags>
		<cflags>-fstack-protector-all</cflags>
		<cflags>-ftrapv</cflags>

		<!-- Linked resources -->

		<cflags>`pkg-config gtk+-3.0 --cflags`</cflags>

		<!-- Defines -->
		<!-- Suggested in the Red Hat publication:
			Developing Applictions in RHEL 8 (2019-11-15)  -->

		<cflags>-D_FORTIFY_SOURCE=2</cflags>
	</lib>

	<data-files>
		<srcdir>../source/rss_ui</srcdir>
		<files>app_icon.png</files>
		<install-to>$(DATADIR)/icons/hicolor/48x48/apps/</install-to>
	</data-files>

	<data-files>
		<srcdir>../source/rss_ui</srcdir>
		<files>app_icon.xpm</files>
		<install-to>$(DATADIR)/pixmaps/</install-to>
	</data-files>

	<data-files>
		<srcdir>../desktop</srcdir>
		<files>newsreader.desktop</files>
		<install-to>$(DATADIR)/applications/</install-to>
	</data-files>

	<data-files>
		<srcdir>../desktop</srcdir>
		<files>newsreader.appdata.xml</files>
		<install-to>$(DATADIR)/metainfo/</install-to>
	</data-files>

	<data-files>
		<srcdir>../doc</srcdir>
		<files>newsreader.7</files>
		<files>newsreader.7.gz</files>
		<install-to>$(DATADIR)/man/man7/</install-to>
	</data-files>

	<!-- Primary Program, RSS User Interface using GTK -->
	<exe id="newsreader">
                <install-to>$(BINDIR)</install-to>
		<!--Succesful build depends on existence of bin/ sub directory -->
		<depends>bin</depends>
		<depends>gresources</depends>

		<!--Final program compiler output goes here -->
		<dirname>bin</dirname>

		<!--Dependent headers -->
		<headers>../source/rss_lib/db/db.hpp</headers>
		<headers>../source/rss_lib/rss_download/feed_download.hpp</headers>
		<headers>../source/rss_lib/rss_parse/feed_parse.hpp</headers>
		<headers>../source/rss_lib/rss/rss_article.hpp</headers>
		<headers>../source/rss_lib/rss/rss_feed.hpp</headers>
		<headers>../source/rss_lib/rss/rss_reader.hpp</headers>
		<headers>../source/rss_lib/rss/rss_util.hpp</headers>
		<headers>../source/rss_lib/rss/rss_writer.hpp</headers>
		<headers>../source/rss_ui/application.hpp</headers>
		<headers>../source/rss_ui/app_resources.h</headers>
		<headers>../source/rss_ui/app_win/app_win.hpp</headers>
		<headers>../source/rss_ui/app_win/article_frame.hpp</headers>
		<headers>../source/rss_ui/app_win/article_header.hpp</headers>
		<headers>../source/rss_ui/app_win/headlines_frame.hpp</headers>
		<headers>../source/rss_ui/rss_manage/rss_manage.hpp</headers>

		<!--Source code used to create the final program -->
		<!--User interface -->
		<sources>../source/rss_ui/impl/application.cpp</sources>
		<sources>../source/rss_ui/app_win/impl/app_win.cpp</sources>
		<sources>../source/rss_ui/app_win/impl/article_frame.cpp</sources>
		<sources>../source/rss_ui/app_win/impl/article_header.cpp</sources>
		<sources>../source/rss_ui/app_win/impl/headlines_frame.cpp</sources>
		<sources>../source/rss_ui/rss_manage/impl/rss_manage.cpp</sources>

		<!--Data/Network interface -->
		<sources>../source/rss_lib/rss/impl/rss_article.cpp</sources>
		<sources>../source/rss_lib/rss/impl/rss_feed.cpp</sources>
		<sources>../source/rss_lib/rss/impl/rss_reader.cpp</sources>
		<sources>../source/rss_lib/rss/impl/rss_util.cpp</sources>
		<sources>../source/rss_lib/rss/impl/rss_writer.cpp</sources>
		<sources>../source/rss_lib/db/impl/db.cpp</sources>
		<sources>../source/rss_lib/rss_download/impl/feed_download.cpp</sources>
		<sources>../source/rss_lib/rss_parse/impl/feed_parse.cpp</sources>

		<ldflags>gresources_app_resources.o</ldflags>

		<!--Common compiler/linker flags -->
		<!--Include file directories -->
		<include>../source</include>

		<cppflags>-std=c++17</cppflags>
		<ldflags>-std=c++17</ldflags>

		<cppflags>-pipe</cppflags>
		<ldflags>-pipe</ldflags>
		<cppflags>-O2</cppflags>
		<ldflags>-O2</ldflags>
		<ldflags>-flto</ldflags>
		<cppflags>-ggdb</cppflags>
		<ldflags>-ggdb</ldflags>

		<!-- Need -no-pie for Ubuntu.
		     Prefer -flinker-output=pie when possible -->
		<ldflags>-flinker-output=pie</ldflags>

		<!-- Linked resources -->

		<cppflags>`pkg-config gtk+-3.0 --cflags`</cppflags>
		<cppflags>`pkg-config webkit2gtk-4.0 --cflags`</cppflags>
		<cppflags>`pkg-config libxml-2.0 --cflags`</cppflags>
		<cppflags>`pkg-config gthread-2.0 --cflags`</cppflags>

		<ldflags>`pkg-config gtk+-3.0 --libs`</ldflags>
		<ldflags>`pkg-config sqlite3 --libs`</ldflags>
		<ldflags>`pkg-config libcurl --libs`</ldflags>
		<ldflags>`pkg-config webkit2gtk-4.0 --libs`</ldflags>
		<ldflags>`pkg-config libxml-2.0 --libs`</ldflags>
		<ldflags>`pkg-config gthread-2.0 --libs`</ldflags>

		<!-- Defines -->
		<!-- Suggested in the Red Hat publication:
			Developing Applictions in RHEL 8 (2019-11-15)  -->

		<cppflags>-D_FORTIFY_SOURCE=2</cppflags>

		<!-- Libc assertions
			Disallow assertions in production use.
			GTK and Pango use assertions useful during development
			that are extremely useful.
			Comment out this line to enable the assertions. -->

		<cppflags>-DNDEBUG</cppflags>

		<!-- Compile time optimization, security, correctness -->

		<cppflags>-fasynchronous-unwind-tables</cppflags>
		<cppflags>-fcf-protection=full</cppflags>
		<cppflags>-fexceptions</cppflags>
		<cppflags>-fno-common</cppflags>
		<cppflags>-fnon-call-exceptions</cppflags>
		<cppflags>-fsplit-stack</cppflags>
		<cppflags>-fstack-clash-protection</cppflags>
		<cppflags>-fstack-protector-all</cppflags>
		<cppflags>-ftrapv</cppflags>
		<cppflags>-fvisibility=hidden</cppflags>

		<!--Warnings. Check for correctness -->

		<cppflags>-pedantic-errors</cppflags>
		<cppflags>-w</cppflags>
		<cppflags>-Waddress</cppflags>
		<cppflags>-Waddress-of-packed-member</cppflags>
		<cppflags>-Waggregate-return</cppflags>
		<cppflags>-Waligned-new</cppflags>
		<cppflags>-Wall</cppflags>
		<cppflags>-Walloca</cppflags>
		<cppflags>-Walloc-zero</cppflags>
		<cppflags>-Warray-bounds</cppflags>
		<cppflags>-Wbool-compare</cppflags>
		<cppflags>-Wbool-operation</cppflags>
		<cppflags>-Wcast-align</cppflags>
		<cppflags>-Wcast-function-type</cppflags>
		<cppflags>-Wcast-qual</cppflags>
		<cppflags>-Wcatch-value</cppflags>
		<cppflags>-Wchar-subscripts</cppflags>
		<cppflags>-Wclass-memaccess</cppflags>
		<cppflags>-Wclobbered</cppflags>
		<cppflags>-Wcomment</cppflags>
		<cppflags>-Wconditionally-supported</cppflags>
		<cppflags>-Wconversion</cppflags>
		<cppflags>-Wconversion-null</cppflags>
		<cppflags>-Wcoverage-mismatch</cppflags>
		<cppflags>-Wctor-dtor-privacy</cppflags>
		<cppflags>-Wdangling-else</cppflags>
		<cppflags>-Wdate-time</cppflags>
		<cppflags>-Wdelete-incomplete</cppflags>
		<cppflags>-Wdelete-non-virtual-dtor</cppflags>
		<cppflags>-Wdeprecated-copy</cppflags>
		<cppflags>-Wdeprecated-copy-dtor</cppflags>
		<cppflags>-Wdisabled-optimization</cppflags>
		<cppflags>-Wdouble-promotion</cppflags>
		<cppflags>-Wduplicated-branches</cppflags>
		<cppflags>-Wduplicated-cond</cppflags>
		<cppflags>-Weffc++</cppflags>
		<cppflags>-Wempty-body</cppflags>
		<cppflags>-Wenum-compare</cppflags>
		<cppflags>-Wexpansion-to-defined</cppflags>
		<cppflags>-Wextra</cppflags>
		<cppflags>-Wfatal-errors</cppflags>
		<cppflags>-Wfloat-conversion</cppflags>
		<cppflags>-Wfloat-equal</cppflags>
		<cppflags>-Wformat</cppflags>
		<cppflags>-Wformat-nonliteral</cppflags>
		<cppflags>-Wformat-security</cppflags>
		<cppflags>-Wformat-signedness</cppflags>
		<cppflags>-Wformat-y2k</cppflags>
		<cppflags>-Wframe-address</cppflags>
		<cppflags>-Whsa</cppflags>
		<cppflags>-Wif-not-aligned</cppflags>
		<cppflags>-Wignored-attributes</cppflags>
		<cppflags>-Wignored-qualifiers</cppflags>
		<cppflags>-Wimplicit-fallthrough</cppflags>
		<cppflags>-Winit-self</cppflags>
		<cppflags>-Winline</cppflags>
		<cppflags>-Wint-in-bool-context</cppflags>
		<cppflags>-Winvalid-memory-model</cppflags>
		<cppflags>-Winvalid-pch</cppflags>
		<cppflags>-Wliteral-suffix</cppflags>
		<cppflags>-Wlogical-not-parentheses</cppflags>
		<cppflags>-Wlogical-op</cppflags>
		<cppflags>-Wlong-long</cppflags>
		<cppflags>-Wmain</cppflags>
		<cppflags>-Wmaybe-uninitialized</cppflags>
		<cppflags>-Wmemset-elt-size</cppflags>
		<cppflags>-Wmemset-transposed-args</cppflags>
		<cppflags>-Wmisleading-indentation</cppflags>
		<cppflags>-Wmissing-attributes</cppflags>
		<cppflags>-Wmissing-braces</cppflags>
		<cppflags>-Wmissing-field-initializers</cppflags>
		<cppflags>-Wmissing-format-attribute</cppflags>
		<cppflags>-Wmissing-include-dirs</cppflags>
		<cppflags>-Wmissing-noreturn</cppflags>
		<cppflags>-Wmissing-profile</cppflags>
		<cppflags>-Wmultiple-inheritance</cppflags>
		<cppflags>-Wmultistatement-macros</cppflags>
		<cppflags>-Wnamespaces</cppflags>
		<cppflags>-Wnarrowing</cppflags>
		<cppflags>-Wno-aggressive-loop-optimizations</cppflags>
		<cppflags>-Wno-attributes</cppflags>
		<cppflags>-Wno-attribute-warning</cppflags>
		<cppflags>-Wno-builtin-declaration-mismatch</cppflags>
		<cppflags>-Wno-builtin-macro-redefined</cppflags>
		<cppflags>-Wno-class-conversion</cppflags>
		<cppflags>-Wno-cpp</cppflags>
		<cppflags>-Wno-deprecated</cppflags>
		<cppflags>-Wno-deprecated-declarations</cppflags>
		<cppflags>-Wno-div-by-zero</cppflags>
		<cppflags>-Wno-endif-labels</cppflags>
		<cppflags>-Wnoexcept</cppflags>
		<cppflags>-Wno-format-contains-nul</cppflags>
		<cppflags>-Wno-format-extra-args</cppflags>
		<cppflags>-Wno-free-nonheap-object</cppflags>
		<cppflags>-Wno-init-list-lifetime</cppflags>
		<cppflags>-Wno-int-to-pointer-cast</cppflags>
		<cppflags>-Wno-invalid-offsetof</cppflags>
		<cppflags>-Wno-multichar</cppflags>
		<cppflags>-Wnonnull</cppflags>
		<cppflags>-Wnonnull-compare</cppflags>
		<cppflags>-Wno-non-template-friend</cppflags>
		<cppflags>-Wnon-virtual-dtor</cppflags>
		<cppflags>-Wno-overflow</cppflags>
		<cppflags>-Wno-pedantic-ms-format</cppflags>
		<cppflags>-Wno-pmf-conversions</cppflags>
		<cppflags>-Wno-pragmas</cppflags>
		<cppflags>-Wno-prio-ctor-dtor</cppflags>
		<cppflags>-Wno-return-local-addr</cppflags>
		<cppflags>-Wno-scalar-storage-order</cppflags>
		<cppflags>-Wno-terminate</cppflags>
		<cppflags>-Wno-unused-result</cppflags>
		<cppflags>-Wnull-dereference</cppflags>
		<cppflags>-Wodr</cppflags>
		<cppflags>-Wold-style-cast</cppflags>
		<cppflags>-Wopenmp-simd</cppflags>
		<cppflags>-Woverlength-strings</cppflags>
		<cppflags>-Woverloaded-virtual</cppflags>
		<cppflags>-Wpacked</cppflags>
		<cppflags>-Wpacked-bitfield-compat</cppflags>
		<cppflags>-Wpacked-not-aligned</cppflags>
		<cppflags>-Wpadded</cppflags>
		<cppflags>-Wparentheses</cppflags>
		<cppflags>-Wpedantic</cppflags>
		<cppflags>-Wpessimizing-move</cppflags>
		<cppflags>-Wplacement-new</cppflags>
		<cppflags>-Wpointer-arith</cppflags>
		<cppflags>-Wpointer-compare</cppflags>
		<cppflags>-Wredundant-decls</cppflags>
		<cppflags>-Wredundant-move</cppflags>
		<cppflags>-Wregister</cppflags>
		<cppflags>-Wreorder</cppflags>
		<cppflags>-Wrestrict</cppflags>
		<cppflags>-Wreturn-type</cppflags>
		<cppflags>-Wsequence-point</cppflags>
		<cppflags>-Wshadow</cppflags>
		<cppflags>-Wshift-count-negative</cppflags>
		<cppflags>-Wshift-count-overflow</cppflags>
		<cppflags>-Wshift-negative-value</cppflags>
		<cppflags>-Wshift-overflow</cppflags>
		<cppflags>-Wsign-compare</cppflags>
		<cppflags>-Wsign-conversion</cppflags>
		<cppflags>-Wsign-promo</cppflags>
		<cppflags>-Wsizeof-array-argument</cppflags>
		<cppflags>-Wsizeof-pointer-div</cppflags>
		<cppflags>-Wsizeof-pointer-memaccess</cppflags>
		<cppflags>-Wstack-protector</cppflags>
		<cppflags>-Wstrict-aliasing</cppflags>
		<cppflags>-Wstrict-null-sentinel</cppflags>
		<cppflags>-Wstrict-overflow</cppflags>
		<cppflags>-Wstringop-truncation</cppflags>
		<cppflags>-Wsubobject-linkage</cppflags>
		<cppflags>-Wsuggest-final-methods</cppflags>
		<cppflags>-Wsuggest-final-types</cppflags>
		<cppflags>-Wsuggest-override</cppflags>
		<cppflags>-Wswitch</cppflags>
		<cppflags>-Wswitch-bool</cppflags>
		<cppflags>-Wswitch-default</cppflags>
		<cppflags>-Wswitch-enum</cppflags>
		<cppflags>-Wswitch-unreachable</cppflags>
		<cppflags>-Wsync-nand</cppflags>
		<cppflags>-Wsystem-headers</cppflags>
		<cppflags>-Wtautological-compare</cppflags>
		<cppflags>-Wtemplates</cppflags>
		<cppflags>-Wtrampolines</cppflags>
		<cppflags>-Wtrigraphs</cppflags>
		<cppflags>-Wtype-limits</cppflags>
		<cppflags>-Wundef</cppflags>
		<cppflags>-Wuninitialized</cppflags>
		<cppflags>-Wunknown-pragmas</cppflags>
		<cppflags>-Wunused</cppflags>
		<cppflags>-Wunused-but-set-parameter</cppflags>
		<cppflags>-Wunused-but-set-variable</cppflags>
		<cppflags>-Wunused-const-variable</cppflags>
		<cppflags>-Wunused-function</cppflags>
		<cppflags>-Wunused-label</cppflags>
		<cppflags>-Wunused-local-typedefs</cppflags>
		<cppflags>-Wunused-macros</cppflags>
		<cppflags>-Wunused-parameter</cppflags>
		<cppflags>-Wunused-value</cppflags>
		<cppflags>-Wunused-variable</cppflags>
		<cppflags>-Wuseless-cast</cppflags>
		<cppflags>-Wvariadic-macros</cppflags>
		<cppflags>-Wvector-operation-performance</cppflags>
		<cppflags>-Wvirtual-inheritance</cppflags>
		<cppflags>-Wvla</cppflags>
		<cppflags>-Wvolatile-register-var</cppflags>
		<cppflags>-Wwrite-strings</cppflags>
		<cppflags>-Wzero-as-null-pointer-constant</cppflags>
	</exe>
</makefile>
