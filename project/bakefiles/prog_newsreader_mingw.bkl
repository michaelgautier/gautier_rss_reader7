<?xml version="1.0"?>
<!--
	Important - This is the Microsoft Windows build of Gautier RSS Reader.
	This build is not Linux or Unix compatible.
-->
<makefile>
	<set var="PREFIX" make_var="1">/usr</set>
	<set var="CC" make_var="1">x86_64-w64-mingw32-gcc</set>
	<set var="CXX" make_var="1">x86_64-w64-mingw32-g++</set>

	<!-- Bakefile add-in to automatically create missing directories -->
 	<include file="rules/modules/datafiles.bkl"/>
	<!--Create the bin/ sub directory if it is missing -->
	<mkdir id="bin">
		<dir>bin</dir>
	</mkdir>

	<lib id="gresources">
		<!--Succesful build depends on existence of bin/ sub directory -->
		<depends>bin</depends>

		<!--Final program compiler output goes here -->
		<dirname>bin</dirname>

		<depends-on-file>../source/rss_ui/app_style.css</depends-on-file>
		<depends-on-file>../source/rss_ui/newsreader.png</depends-on-file>
		<depends-on-file>../source/rss_ui/app_resources.xml</depends-on-file>

		<!--Dependent headers -->
		<headers>../source/rss_lib/app_resources.h</headers>

		<!--Source code used to create the object file -->
		<!-- Resource Bundles -->
		<sources>../source/rss_ui/app_resources.c</sources>

		<!--Common compiler/linker flags -->
		<!--Include file directories -->
		<include>../source</include>

		<cflags>-c</cflags>
		<cflags>-std=c17</cflags>
		<cflags>-pipe</cflags>
		<cflags>-O3</cflags>

		<cflags>`mingw64-pkg-config gtk+-3.0 --cflags`</cflags>

		<!-- Defines -->
		<!-- Microsoft Windows -->

		<cppflags>-D_WIN32</cppflags>
	</lib>

	<data-files>
		<srcdir>../source/rss_ui</srcdir>
		<files>newsreader.png</files>
		<install-to>$(DATADIR)/icons/hicolor/48x48/apps/</install-to>
	</data-files>
	<data-files>
		<srcdir>../source/rss_ui</srcdir>
		<files>newsreader.png</files>
		<install-to>$(DATADIR)/icons/HighContrast/48x48/apps/</install-to>
	</data-files>
	<data-files>
		<srcdir>../source/rss_ui</srcdir>
		<files>newsreader.png</files>
		<install-to>$(DATADIR)/icons/HighContrast/22x22/apps/</install-to>
	</data-files>
	<data-files>
		<srcdir>../source/rss_ui</srcdir>
		<files>newsreader.png</files>
		<install-to>$(DATADIR)/icons/HighContrast/24x24/apps/</install-to>
	</data-files>
	<data-files>
		<srcdir>../source/rss_ui</srcdir>
		<files>newsreader.png</files>
		<install-to>$(DATADIR)/icons/HighContrast/32x32/apps/</install-to>
	</data-files>
	<data-files>
		<srcdir>../source/rss_ui</srcdir>
		<files>newsreader.png</files>
		<install-to>$(DATADIR)/icons/HighContrast/256x256/apps/</install-to>
	</data-files>
	<data-files>
		<srcdir>../source/rss_ui</srcdir>
		<files>newsreader.png</files>
		<install-to>$(DATADIR)/icons/HighContrast/16x16/apps/</install-to>
	</data-files>
	<data-files>
		<srcdir>../source/rss_ui</srcdir>
		<files>newsreader.png</files>
		<install-to>$(DATADIR)/icons/hicolor/64x64/apps/</install-to>
	</data-files>
	<data-files>
		<srcdir>../source/rss_ui</srcdir>
		<files>newsreader.png</files>
		<install-to>$(DATADIR)/icons/hicolor/32x32/apps/</install-to>
	</data-files>
	<data-files>
		<srcdir>../source/rss_ui</srcdir>
		<files>newsreader.png</files>
		<install-to>$(DATADIR)/icons/hicolor/128x128/apps/</install-to>
	</data-files>
	<data-files>
		<srcdir>../source/rss_ui</srcdir>
		<files>newsreader.png</files>
		<install-to>$(DATADIR)/icons/hicolor/16x16/apps/</install-to>
	</data-files>

	<data-files>
		<srcdir>../source/rss_ui</srcdir>
		<files>newsreader.xpm</files>
		<install-to>$(DATADIR)/pixmaps/</install-to>
	</data-files>

	<data-files>
		<srcdir>../desktop</srcdir>
		<files>newsreader.desktop</files>
		<install-to>$(DATADIR)/applications/</install-to>
	</data-files>

	<data-files>
		<srcdir>../desktop</srcdir>
		<files>newsreader.appdata.xml</files>
		<install-to>$(DATADIR)/metainfo/</install-to>
	</data-files>

	<data-files>
		<srcdir>../doc</srcdir>
		<files>newsreader.7</files>
		<files>newsreader.7.gz</files>
		<install-to>$(DATADIR)/man/man7/</install-to>
	</data-files>

	<!-- This version is to test the build using Clang/LLVM for comparison only.
		A build of the program generated by Clang will not be used. -->
	<!-- Primary Program, RSS User Interface using GTK -->
	<exe id="newsreader_mswin">
                <install-to>$(BINDIR)</install-to>
		<!--Succesful build depends on existence of bin/ sub directory -->
		<depends>bin</depends>
		<depends>gresources</depends>

		<!--Final program compiler output goes here -->
		<dirname>bin</dirname>

		<!--Dependent headers -->
		<headers>../source/rss_lib/db/db.hpp</headers>
		<headers>../source/rss_lib/rss_download/feed_download.hpp</headers>
		<headers>../source/rss_lib/rss_parse/feed_parse.hpp</headers>
		<headers>../source/rss_lib/rss/rss_article.hpp</headers>
		<headers>../source/rss_lib/rss/rss_feed.hpp</headers>
		<headers>../source/rss_lib/rss/rss_reader.hpp</headers>
		<headers>../source/rss_lib/rss/rss_util.hpp</headers>
		<headers>../source/rss_lib/rss/rss_writer.hpp</headers>
		<headers>../source/rss_ui/application.hpp</headers>
		<headers>../source/rss_ui/app_resources.h</headers>
		<headers>../source/rss_ui/app_win/app_win.hpp</headers>
		<headers>../source/rss_ui/app_win/article_frame.hpp</headers>
		<headers>../source/rss_ui/app_win/article_header.hpp</headers>
		<headers>../source/rss_ui/app_win/headlines_frame.hpp</headers>
		<headers>../source/rss_ui/rss_manage/rss_manage.hpp</headers>

		<!--Source code used to create the final program -->
		<!--User interface -->
		<sources>../source/rss_ui/impl/application.cpp</sources>
		<sources>../source/rss_ui/app_win/impl/app_win.cpp</sources>
		<sources>../source/rss_ui/app_win/impl/article_frame.cpp</sources>
		<sources>../source/rss_ui/app_win/impl/article_header.cpp</sources>
		<sources>../source/rss_ui/app_win/impl/headlines_frame.cpp</sources>
		<sources>../source/rss_ui/rss_manage/impl/rss_manage.cpp</sources>

		<!--Data/Network interface -->
		<sources>../source/rss_lib/rss/impl/rss_article.cpp</sources>
		<sources>../source/rss_lib/rss/impl/rss_feed.cpp</sources>
		<sources>../source/rss_lib/rss/impl/rss_reader.cpp</sources>
		<sources>../source/rss_lib/rss/impl/rss_util.cpp</sources>
		<sources>../source/rss_lib/rss/impl/rss_writer.cpp</sources>
		<sources>../source/rss_lib/db/impl/db.cpp</sources>
		<sources>../source/rss_lib/rss_download/impl/feed_download.cpp</sources>
		<sources>../source/rss_lib/rss_parse/impl/feed_parse.cpp</sources>

		<ldflags>gresources_app_resources.o</ldflags>

		<!--Common compiler/linker flags -->
		<!--Include file directories -->
		<include>../source</include>

		<cppflags>-std=c++17</cppflags>
		<ldflags>-std=c++17</ldflags>

		<cppflags>-pipe</cppflags>
		<ldflags>-pipe</ldflags>
		<cppflags>-O2</cppflags>
		<ldflags>-O2</ldflags>
		<ldflags>-flto</ldflags>

		<!-- Linked resources -->

		<cppflags>`mingw64-pkg-config gtk+-3.0 --cflags`</cppflags>
		<cppflags>`mingw64-pkg-config Qt5WebKit --cflags`</cppflags>
		<cppflags>`mingw64-pkg-config libxml-2.0 --cflags`</cppflags>
		<cppflags>`mingw64-pkg-config gthread-2.0 --cflags`</cppflags>

		<ldflags>`mingw64-pkg-config gtk+-3.0 --libs`</ldflags>
		<ldflags>`mingw64-pkg-config sqlite3 --libs`</ldflags>
		<ldflags>`mingw64-pkg-config libcurl --libs`</ldflags>
		<ldflags>`mingw64-pkg-config Qt5WebKit --libs`</ldflags>
		<ldflags>`mingw64-pkg-config libxml-2.0 --libs`</ldflags>
		<ldflags>`mingw64-pkg-config gthread-2.0 --libs`</ldflags>

		<!-- Defines -->
		<!-- Microsoft Windows -->

		<cppflags>-D_WIN32</cppflags>

		<!-- Libc assertions
			Disallow assertions in production use.
			GTK and Pango use assertions useful during development
			that are extremely useful.
			Comment out this line to enable the assertions. -->

		<cppflags>-DNDEBUG</cppflags>

		<!--Warnings. Check for correctness -->

		<cppflags>-Werror</cppflags>
		<cppflags>-Wfatal-errors</cppflags>
		<cppflags>-pedantic-errors</cppflags>
		<cppflags>-Wall</cppflags>
		<cppflags>-Wcast-align</cppflags>
		<cppflags>-Wcast-qual</cppflags>
		<cppflags>-Wconversion</cppflags>
		<cppflags>-Wdate-time</cppflags>
		<cppflags>-Wdisabled-optimization</cppflags>
		<cppflags>-Wdouble-promotion</cppflags>
		<cppflags>-Wextra</cppflags>
		<cppflags>-Wextra-semi</cppflags>
		<cppflags>-Wfloat-equal</cppflags>
		<cppflags>-Wformat=2</cppflags>
		<cppflags>-Wno-unused-function</cppflags>
		<cppflags>-Wno-uninitialized</cppflags>
		<cppflags>-Wno-parentheses</cppflags>
		<cppflags>-Wstack-protector</cppflags>
		<cppflags>-Wstrict-overflow=5</cppflags>
	</exe>
</makefile>
